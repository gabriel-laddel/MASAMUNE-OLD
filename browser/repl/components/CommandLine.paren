
progn 


(defvar -cc (@ -components classes)) 


(defvar -ci (@ -components interfaces)) 


(defvar -cr (@ -components results)) 


(defvar -cu (@ -components utils)) 


(defvar -c-a-t-e-g-o-r-y "c-mozrepl") 


(defvar -c-l-a-s-s_-i-d ((@ -components -i-d) "{f62cbe68-ee70-4264-8586-66df185244f5}")) 


(defvar -c-o-n-t-r-a-c-t_-i-d "@mozilla.org/commandlinehandler/general-startup;1?type=repl") 


(defvar -i-n-t-e-r-f-a-c-e (@ -ci ns-i-command-line-handler)) 


((@ -cu import) "resource://gre/modules/XPCOMUtils.jsm") 


(defvar srv-pref
  (chain (aref (@ -components classes) "@mozilla.org/preferences-service;1") (get-service (@ -components interfaces ns-i-pref-service))
   (get-branch "extensions.mozrepl."))) 


(defun -moz-repl-command-line-handler () nil) 


(setf (@ -moz-repl-command-line-handler prototype)
        (create class-description "MozRepl command line handler" class-i-d -c-l-a-s-s_-i-d contact-i-d -c-o-n-t-r-a-c-t_-i-d -query-interface
         ((@ -x-p-c-o-m-utils generate-q-i) (list (@ -ci ns-i-command-line-handler))) handle
         (lambda (cmd-line)
           (let ((start nil))
             (try (setf start ((@ cmd-line handle-flag) "repl" f)) (:catch nil))
             (let ((context-window-type nil))
               (try (setf context-window-type ((@ cmd-line handle-flag-with-param) "repl-context" f)) (:catch nil))
               (if (or start context-window-type)
                   (let ((port (or (-number ((@ cmd-line handle-flag-with-param) "repl" f)) ((@ srv-pref get-int-pref) "port"))))
                     (let ((loopback-only ((@ srv-pref get-bool-pref) "loopbackOnly")))
                       (let ((service (chain (aref -cc "@hyperstruct.net/mozlab/mozrepl;1") (get-service (@ -ci ns-i-moz-repl)) wrapped-j-s-object)))
                         (if context-window-type
                             ((@ service set-context-window-type) context-window-type)
                             nil)
                         ((@ service start) port loopback-only))))
                   nil))))
         help-info
         (chain
          (list "-repl              Start REPL.
"
                "-repl-context      Start in the context gives as window type (see XUL windowtype attribute).
")
          (join "")))) 


(if (@ -x-p-c-o-m-utils generate-n-s-get-factory)
    (defvar -n-s-get-factory ((@ -x-p-c-o-m-utils generate-n-s-get-factory) (list -moz-repl-command-line-handler)))
    (defvar -n-s-get-module ((@ -x-p-c-o-m-utils generate-n-s-get-module) (list -moz-repl-command-line-handler)))) 

