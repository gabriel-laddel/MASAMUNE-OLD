
(defvar -c-l-a-s-s_-i-d ((@ -components -i-d) "{57f4284b-1f9b-4990-8525-9ed5cbb23e01}")) 

(defvar -c-l-a-s-s_-n-a-m-e "MozRepl Server XPCOM") 

(defvar -c-o-n-t-r-a-c-t_-i-d "@hyperstruct.net/mozlab/mozrepl;1") 

(defvar -s-o-u-r-c-e "chrome://mozrepl/content/server.js") 

(defvar -i-n-t-e-r-f-a-c-e (@ -components interfaces ns-i-moz-repl)) 

(defvar -cc (@ -components classes)) 

(defvar -ci (@ -components interfaces)) 

(defvar -cr (@ -components results)) 

(defvar -cu (@ -components utils)) 

(defvar loader (chain (aref -cc "@mozilla.org/moz/jssubscript-loader;1") (get-service (@ -ci moz-i-j-s-sub-script-loader)))) 

((@ -components utils import) "resource://gre/modules/XPCOMUtils.jsm") 

(defun -moz-repl () (setf (@ this wrapped-j-s-object) this)) 

(setf (@ -moz-repl prototype)
        (create class-description -c-l-a-s-s_-n-a-m-e class-i-d -c-l-a-s-s_-i-d contact-i-d -c-o-n-t-r-a-c-t_-i-d -query-interface
         ((@ -x-p-c-o-m-utils generate-q-i) (list -i-n-t-e-r-f-a-c-e (@ -ci ns-i-supports) (@ -ci ns-i-observer))) reload
         (lambda () ((@ loader load-sub-script) -s-o-u-r-c-e (@ this __proto__))))) 

((@ loader load-sub-script) -s-o-u-r-c-e (@ -moz-repl prototype)) 

(if (@ -x-p-c-o-m-utils generate-n-s-get-factory)
    (defvar -n-s-get-factory ((@ -x-p-c-o-m-utils generate-n-s-get-factory) (list -moz-repl)))
    (progn
     (defvar -factory
       (create create-instance
        (lambda (a-outer a-i-i-d)
          (if (!= a-outer nil)
              (throw (@ -cr -n-s_-e-r-r-o-r_-n-o_-a-g-g-r-e-g-a-t-i-o-n))
              nil)
          (let ((component (new (-moz-repl))))
            (return ((@ component -query-interface) a-i-i-d))))))
     (defvar -module
       (create _first-time t register-self
        (lambda (a-comp-mgr a-file-spec a-location a-type)
          (if (@ this _first-time)
              (progn (setf (@ this _first-time) f) (throw (@ -components results -n-s_-e-r-r-o-r_-f-a-c-t-o-r-y_-r-e-g-i-s-t-e-r_-a-g-a-i-n)))
              nil)
          nil
          (setf a-comp-mgr ((@ a-comp-mgr -query-interface) (@ -ci ns-i-component-registrar)))
          ((@ a-comp-mgr register-factory-location) -c-l-a-s-s_-i-d -c-l-a-s-s_-n-a-m-e -c-o-n-t-r-a-c-t_-i-d a-file-spec a-location a-type)
          (let ((cat-man (chain (aref -cc "@mozilla.org/categorymanager;1") (get-service (@ -ci ns-i-category-manager)))))
            ((@ cat-man add-category-entry) "app-startup" "MozRepl" (+ "service," -c-o-n-t-r-a-c-t_-i-d) t t)))
        unregister-self
        (lambda (a-comp-mgr a-location a-type)
          pp
          (setf a-comp-mgr ((@ a-comp-mgr -query-interface) (@ -ci ns-i-component-registrar)))
          ((@ a-comp-mgr unregister-factory-location) -c-l-a-s-s_-i-d a-location)
          (let ((cat-man (chain (aref -cc "@mozilla.org/categorymanager;1") (get-service (@ -ci ns-i-category-manager)))))
            ((@ cat-man devare-category-entry) "app-startup" (+ "service," -c-o-n-t-r-a-c-t_-i-d) t)))
        get-class-object
        (lambda (a-comp-mgr a-c-i-d a-i-i-d)
          (if (not ((@ a-i-i-d equals) (@ -ci ns-i-factory)))
              (throw (@ -cr -n-s_-e-r-r-o-r_-n-o-t_-i-m-p-l-e-m-e-n-t-e-d))
              nil)
          (if ((@ a-c-i-d equals) -c-l-a-s-s_-i-d)
              (return -factory)
              nil)
          (throw (@ -cr -n-s_-e-r-r-o-r_-n-o_-i-n-t-e-r-f-a-c-e)))
        can-unload (lambda (a-comp-mgr) (return t))))
     (defvar -n-s-get-module (lambda (a-comp-mgr a-file-spec) (return -module))))) 
